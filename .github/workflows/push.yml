name: push
on: push
jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: ["3.10"]

    steps:

      - name: Check out repository
        uses: actions/checkout@v3

      - name: SetUp Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          version: latest
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true

      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v3
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}

      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --no-root

      - name: Python Code Quality and Lint
        run: poetry run black . -v --exclude .venv
#        uses: ricardochaves/python-lint@v1.4.0
#        with:
#          python-root-list: "."
#          use-pylint: false
#          use-pycodestyle: false
#          use-flake8: true
#          use-black: true
#          use-mypy: false
#          use-isort: false
#          extra-pylint-options: ""
#          extra-pycodestyle-options: ""
#          extra-flake8-options: "--exclude .venv"
#          extra-black-options: "-v --exclude .venv"
#          extra-mypy-options: ""
#          extra-isort-options: ""
