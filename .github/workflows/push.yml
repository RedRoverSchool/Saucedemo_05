name: push
on: push
jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: ["3.10"]

    steps:

      - name: Check out repository
        uses: actions/checkout@v3

      - name: SetUp Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          version: latest
          virtualenvs-create: true
          virtualenvs-in-project: false
          installer-parallel: true

      #----------------------------------------------
      #       load cached venv if cache exists
      #----------------------------------------------
      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v3
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}
      #----------------------------------------------
      # install dependencies if cache does not exist
      #----------------------------------------------
      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --no-root
      #----------------------------------------------
      # install your root project, if required
      #----------------------------------------------

      - name: Python Code Quality and Lint
        uses: ricardochaves/python-lint@v1.4.0
        with:
          python-root-list: "."
          use-pylint: false
          use-pycodestyle: false
          use-flake8: false
          use-black: true
          use-mypy: false
          use-isort: false
          extra-pylint-options: ""
          extra-pycodestyle-options: ""
          extra-flake8-options: ""
          extra-black-options: "--exclude .venv"
          extra-mypy-options: ""
          extra-isort-options: ""
