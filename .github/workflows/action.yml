name: selenium_test
on:
  pull_request:
    branches:
      - main
      - develop
  push:
      branches:
      - main
      - develop

permissions:
  checks: write
  pull-requests: write
  contents: write

jobs:
  selenium_test:
    runs-on: ubuntu-latest
    steps:
      - name: Check out this repo
        uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Check code for errors by flake8 and format code with black
        uses: ricardochaves/python-lint@v1.4.0
        with:
          python-root-list: ""
          use-pylint: false
          use-pycodestyle: false
          use-flake8: true
          use-black: true
          use-mypy: false
          use-isort: false
          extra-pylint-options: ""
          extra-pycodestyle-options: ""
          extra-flake8-options: "--count --benchmark --ignore=E501,F401,F631,W503,F811,E999"
          extra-black-options: ". -S --line-length 79"
          extra-mypy-options: ""
          extra-isort-options: ""
      - name: Update repo
        run: sudo apt-get update
      #----------------------------------------------
      #  -----  install browsers  -----
      #----------------------------------------------
      - name: Install Chrome 
        uses: browser-actions/setup-chrome@latest
      - name: Install Firefox
        uses: riccione/setup_firefox@v1
      - name: Check Chromium version
        run: chromium-browser --version

      #----------------------------------------------
      #  -----  install & configure poetry  -----
      #----------------------------------------------
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true

      #----------------------------------------------
      #       load cached venv if cache exists
      #----------------------------------------------
      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v3
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}
      #----------------------------------------------
      # install dependencies if cache does not exist
      #----------------------------------------------
      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --no-root
      #----------------------------------------------
      # install your root project, if required
      #----------------------------------------------
      - name: Install project
        run: poetry install --no-interaction
      #----------------------------------------------
      #              run test suite
      #----------------------------------------------
      - name: run all tests
        if: always()
        run: poetry run pytest --alluredir=allure-results -n auto --screenshot=on
        continue-on-error: true

      - name: Get Allure history
        uses: actions/checkout@v3
        if: always()
        continue-on-error: true
        with:
          ref: gh-pages
          path: gh-pages

      - name: Allure Report
        uses: simple-elf/allure-report-action@master
        if: always()
        with:
          allure_results: allure-results
          allure_history: allure-history

      - name: Deploy report to Github Pages
        if: always()
        uses: peaceiris/actions-gh-pages@v2
        env:
          PERSONAL_TOKEN: ${{ secrets.GITHUB_TOKEN  }}
          PUBLISH_BRANCH: gh-pages
          PUBLISH_DIR: allure-history

      #----------------------------------------------
      #              save report for download
      #----------------------------------------------
      - name: Upload report using artifacts
        uses: actions/upload-artifact@v3
        if: failure()
        with: 
          name: report
          path: /home/runner/work/Saucedemo_05/Saucedemo_05/report/
